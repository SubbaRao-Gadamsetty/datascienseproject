name: CI/CD for Dockerized Flask App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/california-api:latest

    - name: Image digest
      run: echo ${{ steps.build-and-publish.outputs.digest }}

  deploy:
    needs: build-and-publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Pull Docker image
      run: |
        docker pull ${{ secrets.DOCKER_USERNAME }}/california-api:latest

    - name: Stop and remove existing container
      run: |
        docker stop california-api-container || true
        docker rm california-api-container || true

    - name: Deploy container
      run: |
        docker run -d \
          --name california-api-container \
          -p 5000:5000 \
          --restart unless-stopped \
          ${{ secrets.DOCKER_USERNAME }}/california-api:latest

    - name: Verify deployment
      run: |
        sleep 10
        curl -f http://localhost:5000/health || exit 1