name: CI/CD for Dockerized Flask App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest

  build-and-publish:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/california-api:latest

    - name: Image digest
      run: echo ${{ steps.build-and-publish.outputs.digest }}

  # deploy-to-ec2:
  #   needs: build-and-publish
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3

  #   - name: Set up SSH
  #     uses: webfactory/ssh-agent@v0.9.0
  #     with:
  #       ssh-private-key: ${{ secrets.EC2_KEY }}

  #   - name: Deploy to EC2
  #     run: |
  #       ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
  #         docker pull ${{ secrets.DOCKER_USERNAME }}/california-api:latest
          
  #         docker stop california-api || true
  #         docker rm california-api || true

  #         docker run -d -p 8080:8080 --name california-api ${{ secrets.DOCKER_USERNAME }}/california-api:latest
  #       EOF
